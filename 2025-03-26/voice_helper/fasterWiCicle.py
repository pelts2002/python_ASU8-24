# venv\Scripts\activate

import time
import numpy as np
import sounddevice as sd
import wave
from faster_whisper import WhisperModel
import processor

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø–∏—Å–∏
SAMPLE_RATE = 16000  # –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏ (—Å–æ–≤–º–µ—Å—Ç–∏–º–∞ —Å Whisper)
DURATION = 3  # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ (—Å–µ–∫)
CHANNELS = 1  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤ (1 = –º–æ–Ω–æ)
MODEL_SIZE = "small"  # –†–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏ (–º–æ–∂–Ω–æ "small", "medium", "large")

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
model = WhisperModel(MODEL_SIZE, device="cpu", compute_type="int8")


def record_audio(filename="temp.wav"):
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∞—É–¥–∏–æ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ .wav"""
    print("üé§ –ì–æ–≤–æ—Ä–∏—Ç–µ...")
    audio_data = sd.rec(int(SAMPLE_RATE * DURATION), samplerate=SAMPLE_RATE,
                        channels=CHANNELS, dtype=np.int16, device=1)
    sd.wait()  # –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
    print("‚úÖ –ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ .wav
    with wave.open(filename, "wb") as wf:
        wf.setnchannels(CHANNELS)
        wf.setsampwidth(2)  # 16 –±–∏—Ç = 2 –±–∞–π—Ç–∞
        wf.setframerate(SAMPLE_RATE)
        wf.writeframes(audio_data.tobytes())


def transcribe_audio(filename="temp.wav"):
    """–†–∞—Å–ø–æ–∑–Ω–∞—ë—Ç —Ä–µ—á—å –∏–∑ .wav —Ñ–∞–π–ª–∞ –∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ü–∏—é, –µ—Å–ª–∏ —è–∑—ã–∫ –Ω–µ —Ä—É—Å—Å–∫–∏–π"""
    segments, info = model.transcribe(filename, beam_size=5)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —è–∑—ã–∫ —Ä—É—Å—Å–∫–∏–º
    if info.language != "ru":
        print(f"‚ùå –Ø–∑—ã–∫ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –∫–∞–∫ {info.language} (–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: {info.language_probability:.2f}). –ü—Ä–æ–ø—É—Å–∫–∞–µ–º...")
        return None

    print(f"üåç –û–ø—Ä–µ–¥–µ–ª—ë–Ω —è–∑—ã–∫: {info.language} (–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: {info.language_probability:.2f})")

    transcript = ""
    for segment in segments:
        transcript += f"{segment.text} "

    return transcript.strip()


def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –∑–∞–ø–∏—Å–∏ –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è"""
    while True:
        record_audio()  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –∞—É–¥–∏–æ
        transcript = transcribe_audio()  # –†–∞—Å–ø–æ–∑–Ω–∞—ë–º —Ç–µ–∫—Å—Ç

        if transcript:
            print(f"üìù –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {transcript}")
            print("=" * 40)  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å

            processor.process_text(transcript)

        time.sleep(0.5)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –∑–∞–ø–∏—Å—å—é

if __name__ == "__main__":
    main()
